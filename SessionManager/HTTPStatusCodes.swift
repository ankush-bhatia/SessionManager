//
//  HTTPStatusCodes.swift
//  wrapperURLSession
//
//  Created by ANKUSH BHATIA on 05/10/18.
//  Copyright Â© 2018 ClickLabs. All rights reserved.
//

import Foundation

public enum HttpStatusCode: Int {
    case success
    case badRequest
    case validationError
    case somethingWentWrong
    case unauthorised
    case timeout
    case forbidden
    case created
    case `continue`
    case switchingProtocols
    case accepted
    case nonAuthoritativeInformation
    case noContent
    case resetContent
    case partialContent
    case multipleChoices
    case movedPermanently
    case found
    case seeOther
    case notModified
    case temporaryRedirect
    case permanentRedirect
    case paymentRequired
    case methodNotAllowed
    case notAcceptable
    case proxyAuthenticationRequired
    case serverShutsConnection
    case conflict
    case gone
    case lengthRequired
    case preconditionFailed
    case payloadTooLarge
    case URITooLong
    case unsupportedMediaType
    case requestRangeNotSatisfiable
    case expectationFailed
    case iAmTeapot
    case unprocessableEntity
    case tooEarly
    case upgradeRequired
    case preconditionRequired
    case tooManyRequests
    case requestHeadersFieldsTooLarge
    case unavailableLegalReasons
    case internalServerError
    case notImplemented
    case badGateway
    case serviceUnavailable
    case gatewayTimeout
    case httpVersionNotSupported
    case networkAuthenticationRequired
    case userCancelled
    case noInternetConnection
    
    static func statusCode(forCode code: Int) -> HttpStatusCode {
        switch code {
        case 100:
            return .continue
        case 101:
            return .switchingProtocols
        case 200:
            return .success
        case 201:
            return .created
        case 202:
            return .accepted
        case 203:
            return .nonAuthoritativeInformation
        case 204:
            return .noContent
        case 205:
            return .resetContent
        case 206:
            return .partialContent
        case 300:
            return .multipleChoices
        case 301:
            return .movedPermanently
        case 302:
            return .found
        case 303:
            return .seeOther
        case 304:
            return .notModified
        case 307:
            return .temporaryRedirect
        case 308:
            return .permanentRedirect
        case 400:
            return .validationError
        case 401:
            return .unauthorised
        case 402:
            return .paymentRequired
        case 403:
            return .forbidden
        case 404:
            return .badRequest
        case 405:
            return .methodNotAllowed
        case 406:
            return .notAcceptable
        case 407:
            return .proxyAuthenticationRequired
        case 408:
            return .serverShutsConnection
        case 409:
            return .conflict
        case 410:
            return .gone
        case 411:
            return .lengthRequired
        case 412:
            return .preconditionFailed
        case 413:
            return .payloadTooLarge
        case 414:
            return .URITooLong
        case 415:
            return .unsupportedMediaType
        case 416:
            return .requestRangeNotSatisfiable
        case 417:
            return .expectationFailed
        case 418:
            return .iAmTeapot
        case 422:
            return .unprocessableEntity
        case 425:
            return .tooEarly
        case 426:
            return .upgradeRequired
        case 428:
            return .preconditionRequired
        case 429:
            return .tooManyRequests
        case 431:
            return .requestHeadersFieldsTooLarge
        case 451:
            return .unavailableLegalReasons
        case 500:
            return .internalServerError
        case 501:
            return .notImplemented
        case 502:
            return .badGateway
        case 503:
            return .serviceUnavailable
        case 504:
            return .gatewayTimeout
        case 505:
            return .httpVersionNotSupported
        case 511:
            return .networkAuthenticationRequired
        case -1009:
            return .noInternetConnection
        case URLError.timedOut.rawValue:
            return .timeout
        case URLError.appTransportSecurityRequiresSecureConnection.rawValue:
            return .somethingWentWrong
        case URLError.backgroundSessionInUseByAnotherProcess.rawValue:
            return .somethingWentWrong
        case URLError.backgroundSessionRequiresSharedContainer.rawValue:
            return .somethingWentWrong
        case URLError.backgroundSessionWasDisconnected.rawValue:
            return .somethingWentWrong
        case URLError.badServerResponse.rawValue:
            return .somethingWentWrong
        case URLError.badURL.rawValue:
            return .somethingWentWrong
        case URLError.callIsActive.rawValue:
            return .somethingWentWrong
        case URLError.cancelled.rawValue:
            return .userCancelled
        case URLError.cannotCloseFile.rawValue:
            return .somethingWentWrong
        case URLError.cannotConnectToHost.rawValue:
            return .somethingWentWrong
        case URLError.cannotCreateFile.rawValue:
            return .somethingWentWrong
        case URLError.cannotDecodeContentData.rawValue:
            return .somethingWentWrong
        case URLError.cannotDecodeRawData.rawValue:
            return .somethingWentWrong
        case URLError.cannotFindHost.rawValue:
            return .somethingWentWrong
        case URLError.cannotLoadFromNetwork.rawValue:
            return .somethingWentWrong
        case URLError.cannotMoveFile.rawValue:
            return .somethingWentWrong
        case URLError.cannotOpenFile.rawValue:
            return .somethingWentWrong
        case URLError.cannotParseResponse.rawValue:
            return .somethingWentWrong
        case URLError.cannotRemoveFile.rawValue:
            return .somethingWentWrong
        case URLError.cannotWriteToFile.rawValue:
            return .somethingWentWrong
        case URLError.clientCertificateRejected.rawValue:
            return .somethingWentWrong
        case URLError.clientCertificateRequired.rawValue:
            return .somethingWentWrong
        case URLError.dataLengthExceedsMaximum.rawValue:
            return .somethingWentWrong
        case URLError.dataNotAllowed.rawValue:
            return .somethingWentWrong
        case URLError.dnsLookupFailed.rawValue:
            return .somethingWentWrong
        case URLError.downloadDecodingFailedMidStream.rawValue:
            return .somethingWentWrong
        case URLError.downloadDecodingFailedToComplete.rawValue:
            return .somethingWentWrong
        case URLError.fileDoesNotExist.rawValue:
            return .somethingWentWrong
        case URLError.fileIsDirectory.rawValue:
            return .somethingWentWrong
        case URLError.httpTooManyRedirects.rawValue:
            return .somethingWentWrong
        case URLError.internationalRoamingOff.rawValue:
            return .somethingWentWrong
        case URLError.networkConnectionLost.rawValue:
            return .somethingWentWrong
        case URLError.noPermissionsToReadFile.rawValue:
            return .somethingWentWrong
        case URLError.notConnectedToInternet.rawValue:
            return .somethingWentWrong
        case URLError.redirectToNonExistentLocation.rawValue:
            return .somethingWentWrong
        case URLError.requestBodyStreamExhausted.rawValue:
            return .somethingWentWrong
        case URLError.resourceUnavailable.rawValue:
            return .somethingWentWrong
        case URLError.secureConnectionFailed.rawValue:
            return .somethingWentWrong
        case URLError.serverCertificateHasBadDate.rawValue:
            return .somethingWentWrong
        case URLError.serverCertificateHasUnknownRoot.rawValue:
            return .somethingWentWrong
        case URLError.serverCertificateNotYetValid.rawValue:
            return .somethingWentWrong
        case URLError.serverCertificateUntrusted.rawValue:
            return .somethingWentWrong
        case URLError.unknown.rawValue:
            return .somethingWentWrong
        case URLError.unsupportedURL.rawValue:
            return .somethingWentWrong
        case URLError.userAuthenticationRequired.rawValue:
            return .somethingWentWrong
        case URLError.userCancelledAuthentication.rawValue:
            return .somethingWentWrong
        case URLError.zeroByteResource.rawValue:
            return .somethingWentWrong
        default:
            return .somethingWentWrong
        }
    }
}
